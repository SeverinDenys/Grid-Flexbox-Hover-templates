* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-size: 62.5%;
  background: linear-gradient(
    to right,
    #005aa7,
    #fffde4
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

.big-container {
}

.title {
  text-align: center;
  margin-top: 2.5rem;
  font-size: 8rem;
}

.container {
  width: 1000px;
  margin: 3rem auto 5rem;
  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;
  grid-gap: 30px;
}

/* GRID TEMPLATES */

.item {
  color: white;
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
}

.header {
  background-color: orange;
  grid-column: 1 / -1;
}

.item--2 {
  background-color: yellow;
}

.item--3 {
  background-color: red;
}

.item--4 {
  background-color: green;
}

.sidebar {
  background-color: blue;
  grid-column: 4 / 5;
  grid-row: 2 / span 2;
}

.main-content {
  background-color: violet;
  grid-column: 1 / span 3;
}

.footer {
  background-color: teal;
  grid-column: 1 / -1;
}

/* FLEXBOX TEMPLATES */

.flexbox-container {
  display: flex;
  flex-wrap: wrap; /* if there is not enough space, the items will wrap to the new line */
  justify-content: center; /* changes the MAIN AXIS. There are also flex-start(default), flex-end, space-between, space around */
  align-items: center; /* changes the CROSS AXIS. stretch(default), flex-start, center(align items vertically), space around */
  /* align-content: center;  only for multiline flexbox container. It's not often used */
  /* flex-direction: column;  our items will show in column instead of single row */
}

.title-flexbox {
  font-size: 4rem;
  text-align: center;
  margin-bottom: 3rem;
}

.flexbox-item {
  width: 20rem;
  font-size: 2rem;
  margin: 1rem;
  border: 3px solid #333;
  background-color: #dfdfdf;
}

.flexbox-item-1 {
  /* flex: 0 0 70%; flex-grow, flex-shrink, flex-basis */
  min-height: 10rem;
  flex-shrink: 0; /* won't allow out item to shrink, regardles of the having size */
  order: 3; /* changes the order of item without changing html  */
}

.flexbox-item-2 {
  min-height: 20rem;
  /* align-self: center; allows to change specific item */
}

.flexbox-item-3 {
  min-height: 30rem;
  /* flex-grow: 1; will stretch to all empty space it has. We can use it to multiple items */
}
