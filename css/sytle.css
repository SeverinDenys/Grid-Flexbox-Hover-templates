* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-size: 62.5%;
  background: linear-gradient(
    to right,
    #005aa7,
    #fffde4
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

.title {
  text-align: center;
  margin-top: 2.5rem;
  margin-bottom: 3rem;
  font-size: 4rem;
  border-bottom: 1px solid black;
  border-top: 1px solid black;
}

.container {
  width: 1000px;
  margin: 3rem auto 5rem;
  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;
  grid-gap: 30px;
}

/* GRID TEMPLATES */

.item {
  color: white;
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
}

.header {
  background-color: var(--color-primary);
  grid-column: 1 / -1;
}

.item--2 {
  background-color: yellow;
}

.item--3 {
  background-color: red;
}

.item--4 {
  background-color: green;
}

.sidebar {
  background-color: blue;
  grid-column: 4 / 5;
  grid-row: 2 / span 2;
}

.main-content {
  background-color: violet;
  grid-column: 1 / span 3;
}

.footer {
  background-color: teal;
  grid-column: 1 / -1;
}

/* FLEXBOX TEMPLATES */

.flexbox-container {
  display: flex;
  flex-wrap: wrap; /* if there is not enough space, the items will wrap to the new line */
  justify-content: center; /* changes the MAIN AXIS. There are also flex-start(default), flex-end, space-between, space around */
  align-items: center; /* changes the CROSS AXIS. stretch(default), flex-start, center(align items vertically), space around */
  /* align-content: center;  only for multiline flexbox container. It's not often used */
  /* flex-direction: column;  our items will show in column instead of single row */
  margin-bottom: 3rem;
}

.flexbox-item {
  width: 20rem;
  font-size: 2rem;
  margin: 1rem;
  border: 3px solid #333;
  background-color: #dfdfdf;
}

.flexbox-item-1 {
  /* flex: 0 0 70%; flex-grow, flex-shrink, flex-basis */
  min-height: 10rem;
  flex-shrink: 0; /* won't allow out item to shrink, regardles of the having size */
  order: 3; /* changes the order of item without changing html  */
}

.flexbox-item-2 {
  min-height: 20rem;
  /* align-self: center; allows to change specific item */
}

.flexbox-item-3 {
  min-height: 30rem;
  /* flex-grow: 1; will stretch to all empty space it has. We can use it to multiple items */
}

/* BUTTON HOVER */

.container-btn {
  width: 1000px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  margin: 0 auto 3rem;
}

button {
  margin: 1rem;
}

.btn {
  background-color: rgb(199, 198, 198);
  color: #222;
  padding: 0.5rem 1rem;
  margin: 1.6rem auto;
  font-size: 3rem;
  border: none;
  outline: none;
  position: relative;
  cursor: pointer;
  border-radius: 5px;
}

.btn-border-top::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: -1;
  border: 5px solid rgb(187, 181, 181);
  transition: top, left, right, bottom, 100ms ease-in-out;
}

.btn-border-top:hover::before,
.btn-border-top:focus::before {
  top: calc(2px * -2);
  left: calc(2px * -2);
  right: calc(2px * -2);
  bottom: calc(2px * -2);
}

.btn-border-slider::before {
  content: "";
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -1;
  background-color: rgb(238, 214, 76);
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 300ms ease-in-out;
}

.btn-border-slider:hover::before,
.btn-border-slider:focus::before {
  transform: scaleX(1);
}

.btn-border-slider {
  z-index: 1;
  transition: color 300ms ease-in-out;
}

.btn-border-slider:hover {
  color: rgb(0, 101, 126);
}

.btn-border-underline::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 5px;
  background-color: rgb(0, 174, 255);
  transform: scaleX(0);
  transition: transform 300ms ease-in-out;
}

.btn-border-underline:hover::before,
.btn-border-underline:focus::before {
  transform: scaleX(1);
}
